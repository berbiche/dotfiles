{ pkgs, lib, ... }:

{
  lib.dummyPackage = pkgs.runCommandLocal "dummy" { } "mkdir $out";

  # Helper function to make a neovim plugin's configuration "lazy"
  lib.neovim.lazy = config: let
    packadd = map (x: "vim.cmd.packadd([[${x}]])") config.packadd;

    indent = width: stringOrList: let
      prefix = lib.concatStrings (lib.genList (_: " ") width);
      commands =
        if builtins.isList stringOrList
        then stringOrList
        else lib.splitString "\n" stringOrList;
    in lib.concatMapStringsSep "\n" (x: "${prefix}${x}") commands;
  in {
    inherit (config) plugin;
    type = "lua";
  }
  // lib.optionalAttrs (config ? optional) { inherit (config) optional; }
  // lib.optionalAttrs (config ? packadd) { optional = true; }
  // lib.optionalAttrs (config ? config || config ? packadd) {
    config = ''
      -- Generated by lib.neovim.lazy
      vim.api.nvim_create_autocmd({'VimEnter'}, {
        group = myCommandGroup,
        once = true,
        callback = function()
      ${lib.optionalString (config ? packadd) (indent 4 packadd)}
      ${lib.optionalString (config ? config) (indent 4 config.config)}
        end,
      })
    '';
  };
}
