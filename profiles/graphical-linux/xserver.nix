{ config, pkgs, lib, ... }:

let
  profiles = {
    "G9-dual-monitors" = [
      {
        name = "G9 hdmi";
        edid = "00ffffffffffff004c2d52704d38584332300103807722782ac725b14b46a8260e5054bfef80714f810081c08180a9c0b3009500d1c01a6800a0f0381f4030203a00a9504100001a000000fd00324b1eb73c000a202020202020000000fc004c433439473935540a20202020000000ff0048345a4e3830313330390a202003ddf00270000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009e02033df1499061601f041312035a2309070783010000e2004fe305c00067030c001000b83c67d85dc401788003e60605018b7312e20f06e5018b849001565e00a0a0a0295030203500a9504100001a584d00b8a1381440f82c4500a9504100001e00000000000000000000000000000000000000000000000000000000000071701279000003012833b70088ff139f00";
        status = true;
        primary = true;
      }
      {
        name = "G9 DisplayPort";
        edid = "00ffffffffffff004c2d53704d38584332300104b57722783bc725b14b46a8260e5054bfef80714f810081c08180a9c0b3009500d1c074d600a0f038404030203a00a9504100001a000000fd0c3cf06666c2010a202020202020000000fc004c433439473935540a20202020000000ff0048345a4e3830313330390a2020027402032df044105a3f5c2309070783010000e305c0006d1a0000020f3cf000048b127317e3060501e5018b849001565e00a0a0a0295030203500a9504100001a584d00b8a1381440f82c4500a9504100001e1a6800a0f0381f4030203a00a9504100001a6fc200a0a0a0555030203500a9504100001a000000000000000000008470127900000301649cf50288ff133f017f801f009f052e00200007002f790108ff139f002f801f009f0553000200090033b70008ff139f002f801f009f05280002000900e36e0108ff094f0007801f009f052a002000070090c70108ff0e9f002f801f0037048600020009000000000000000000000000000000000000001d90";
        status = false;
      }
    ];
  };

  # Autorandr expects a predefined directory structure so we
  # use our own xlib script instead
  confScript = pkgs.writers.writePython3 "lightdm-configure-script" {
    flakeIgnore = [ "E265" "F401" "E501" ];
    libraries = with pkgs.python3Packages; [ xlib ];
  } ./xserver-randr.py;

  jsonFormat = pkgs.formats.json { };
in
{
  services.xserver.displayManager.setupCommands = ''
    "${confScript}" "${jsonFormat.generate "profile.json" profiles}" || true
  '';
}
